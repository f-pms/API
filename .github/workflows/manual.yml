# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    inputs:
      choice:
        type: choice
        description: Make a choice
        options:
        - Major
        - Minor
        - Patch

jobs:
  release:
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@v4
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: corretto
        java-version: 17
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3-beta
    - name: Create Release
      run: ./gradlew createRelease -Prelease.versionIncrementer=increment${{inputs.choice}}
    - name: Current Version
      id: version-getter
      run: echo "TAG_NAME=$(./gradlew currentVersion -q "-Prelease.quiet")" >> "$GITHUB_OUTPUT"
    # - name: Configure Docker
    #   env:
    #     DOCKER_VERSION: "5:19.03.9~3-0~ubuntu-focal"
    #     DOCKER_HOST: "tcp://127.0.0.1:2375"
    #   run: .github/setup_docker.sh
    - name: Create Dockerfile
      id: createDockerFile
      run: ./gradlew dockerCreateDockerfile
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      env:
        APP_VERSION: ${{ steps.version-getter.outputs.TAG_NAME }}
      uses: docker/build-push-action@v5
      with:
        context: "/home/runner/work/API/API/core/core-api/build/docker"
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/rms:${{ steps.version-getter.outputs.TAG_NAME }}
    # - name: Build the Docker image
    #   env:
    #     APP_VERSION: ${{ steps.version-getter.outputs.TAG_NAME }}
    #   run: docker build . --file /home/runner/work/API/API/core/core-api/build/docker/Dockerfile --tag ${{secrets.docker_username}}/${{secrets.repo_name}}:${{APP_VERSION}}