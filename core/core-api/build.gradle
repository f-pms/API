bootJar.enabled = true
jar.enabled = false

apply plugin: 'com.bmuschko.docker-java-application'
apply plugin: 'groovy'

dependencies {
  implementation project(":core:core-model")
  implementation project(":integration:db")
  implementation project(":integration:plc-integration")
  implementation project(":support:logging")
  implementation project(":support:auth")
  implementation project(":integration:plc-api")

  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-websocket'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-mail'
  implementation 'org.apache.commons:commons-lang3'
  implementation 'org.springframework.boot:spring-boot-starter-aop'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

  implementation 'org.modelmapper:modelmapper:3.2.0'

  implementation 'io.vavr:vavr:0.10.4'

  implementation 'org.springframework.retry:spring-retry:2.0.5'
  implementation 'org.springframework:spring-aspects'

  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc:11.2.3.jre17'
  runtimeOnly 'com.h2database:h2'

  implementation 'org.apache.poi:poi:5.2.5'
  implementation 'org.apache.poi:poi-ooxml:5.2.5'

  testImplementation "org.springframework.boot:spring-boot-starter-test"
  testImplementation "org.awaitility:awaitility"
  testImplementation "org.testcontainers:mssqlserver:1.19.4"
  testImplementation "org.testcontainers:testcontainers:${testContainerVersion}"
  testImplementation "org.testcontainers:junit-jupiter:${testContainerVersion}"
  testImplementation "org.junit.jupiter:junit-jupiter:${jUnitVersion}"
  testImplementation project(":support:spock-test")
}

tasks.withType(Test).configureEach {
  useJUnitPlatform()
}
springBoot {
  mainClass = 'com.hbc.pms.core.api.CoreApiApplication'
}
docker {
  javaApplication {
    baseImage = 'eclipse-temurin:17.0.10_7-jre-alpine'
    images = ["${projectName}:${rootProject.version}"]
  }
  registryCredentials {
    username = "${System.getenv("DOCKER_USERNAME")}"
    password = "${System.getenv("DOCKER_PASSWORD")}"
  }
}
