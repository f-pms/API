bootJar.enabled = true
jar.enabled = false

apply plugin: 'com.bmuschko.docker-java-application'
apply plugin: 'groovy'

dependencies {
    implementation project(":core:core-model")
    implementation project(":integration:db")
    implementation project(":integration:plc-integration")
    implementation project(":support:logging")
    implementation project(":integration:plc-api")

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.apache.commons:commons-lang3'
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    implementation 'org.modelmapper:modelmapper:3.0.0'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc:11.2.3.jre17'
    runtimeOnly 'com.h2database:h2'
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.awaitility:awaitility"
    testImplementation "org.testcontainers:testcontainers:${testContainerVersion}"
    testImplementation "org.testcontainers:junit-jupiter:${testContainerVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter:${jUnitVersion}"
    testImplementation "org.apache.plc4x:plc4j-transport-test:${plc4xVersion}"
    testImplementation "org.apache.plc4x:plc4j-driver-mock:${plc4xVersion}"
}

tasks.withType(Test) {
    useJUnitPlatform()
}
springBoot {
    mainClass = 'com.hbc.pms.core.api.CoreApiApplication'
}
docker {
    javaApplication  {
        baseImage = 'eclipse-temurin:17.0.10_7-jre-alpine'
        images = ["${projectName}:${rootProject.version}"]
    }
    registryCredentials {
        username = "${System.getenv("DOCKER_USERNAME")}"
        password = "${System.getenv("DOCKER_PASSWORD")}"
    }
}